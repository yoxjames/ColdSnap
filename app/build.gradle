/*
 * Copyright (c) 2017 James Yox
 *
 * This file is part of ColdSnap.
 *
 * ColdSnap is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ColdSnap is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with ColdSnap.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'net.ltgt.errorprone'
apply plugin: "net.ltgt.apt"

Properties props = new Properties()
File propsFile = file('private.properties')
if (propsFile.exists()) {
    props.load(propsFile.newDataInputStream())
} else if (System.env.WUNDERGROUND_API_KEY != null) {
    props.setProperty("wundergroundAPIKey", System.env.MY_API_KEY)
} else {
    throw new GradleException("Missing private.properties, check the private.properties")
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "com.yoxjames.coldsnap"
        minSdkVersion 21
        targetSdkVersion 27

        versionCode 1
        versionName "1.0"

        dexOptions {
            javaMaxHeapSize "16g"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField "String", "WUNDERGROUND_API_KEY", "\"${props.getProperty("wundergroundAPIKey")}\""
            buildConfigField "String", "GOOGLE_GEOLOCATION_API_KEY", "\"${props.getProperty("googleGeolocationAPIKey")}\""
            buildConfigField "String", "OPEN_WEATHER_MAPS_API_KEY", "\"${props.getProperty("openWeatherMapsAPIKey")}\""
        }
    }
}

dependencies {

    def room_version = "1.1.1"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.loopj.android:android-async-http:1.4.9'
    implementation 'org.mockito:mockito-core:1.10.19'
    implementation 'com.google.dagger:dagger:2.16'
    implementation 'com.google.dagger:dagger-android-support:2.16'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.4'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.5'
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:2.1.1'

    implementation 'com.jakewharton.rxbinding2:rxbinding-design:2.1.1'
    implementation 'com.jakewharton.rx2:replaying-share:2.0.1'
    implementation 'org.jetbrains:annotations:16.0.1'

    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'

    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    errorprone "com.google.errorprone:error_prone_core:2.3.1"

    api 'com.google.code.findbugs:jsr305:3.0.1'
    api "com.google.auto.value:auto-value-annotations:1.6"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.json:json:20171018'
    testImplementation "android.arch.persistence.room:testing:$room_version"

    annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
    annotationProcessor "com.uber.nullaway:nullaway:0.4.2"
    testAnnotationProcessor "com.uber.nullaway:nullaway:0.4.2"
    annotationProcessor "com.google.auto.value:auto-value:1.6"
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}

configurations.all {
    resolutionStrategy {
        force 'org.hamcrest:hamcrest-core:1.3'
    }}
tasks.withType(JavaCompile) {
    // remove "-Xep:NullAway:ERROR" to have NullAway only emit warnings
    options.compilerArgs += [
            "-Xep:NullAway:ERROR",
            "-XepOpt:NullAway:AnnotatedPackages=com.yoxjames",
            // Exclude all generated code
            "-XepExcludedPaths:" + getBuildDir().toString() + "/generated/.*",
            "-XepOpt:NullAway:KnownInitializers=" +
                    "com.yoxjames.coldsnap.job.ColdAlarm.onReceive",
            "-XepOpt:NullAway:ExcludedClassAnnotations=" +
                    "android.arch.persistence.room.Entity",
            "-XepOpt:NullAway:ExcludedFieldAnnotations=" +
                    "butterknife.BindView," +
                    "javax.inject.Inject," +
                    "org.mockito.Mock",
    ]
}


